# The 'web' key defines a single web instance container running a single web server
# process (currently Nginx), behind which runs your application. It configures
# the web server, including what requests should be served directly
# (such as static files) and which should be passed to your application.
# DOCS: https://docs.platform.sh/configuration/app/web.html
web:
    # 'upstream' specifies how the front server will connect to your application
    # (the process started by 'commands.start').
    # DOCS: https://docs.platform.sh/configuration/app/web.html#upstream
    upstream:
        # Describes whether your application will listen on a Unix socket
        # ('unix') or a TCP socket ('tcp'). Default: 'tcp'.
        # DOCS: https://docs.platform.sh/configuration/app/web.html#socket-family
        socket_family: tcp
        # Specifies whether your application is going to receive incoming requests
        # over HTTP ('http') or FastCGI ('fastcgi'). Default is runtime-dependent.
        protocol: http
    # The 'commands' key defines the command to launch the application.
    # DOCS: https://docs.platform.sh/configuration/app/web.html#commands
    commands:
        # The 'start' key specifies the command to use to launch your application.
        # If the command specified by the 'start' key terminates it will
        # be restarted automatically.
        start: ./bin/app
    # 'locations' allows you to control how the application container responds
    # to incoming requests at a very fine-grained level.
    # DOCS: https://docs.platform.sh/configuration/app/web.html#locations
    locations:
        /:
            # Whether to forward disallowed and missing resources from this
            # location to the application. Can be 'true', 'false', or an absolute
            # URI path (as in PHP, when it is typically the front controller).
            passthru: true
            # Whether to allow serving files which don't match a rule. Default 'true'.
            allow: false